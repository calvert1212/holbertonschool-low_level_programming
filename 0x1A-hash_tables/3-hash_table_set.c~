#include "hash_tables.h"

/**
 * hash_table_set - Sets nodes for the hash table
 * @ht: Hash table
 * @key: Hash key
 * @value: String value
 *
 * Return: 1 on success, 0 on fail
 */

int hash_table_set(hash_table_t *ht, const char *key, const char *value)
{
	unsigned long int i = 0;
	hash_node_t *n = NULL, *k = NULL;

	if (ht == NULL || key == NULL || strcmp(key, "") == 0)
		return (0);
	i = key_index((const unsigned char *) key, ht->size);
	k = ht->array[i];

	while (k != NULL)
	{
		if (strcmp(key, k->key) == 0)
		{
			free(k->value);
			k->value = strdup(value);
			return (1);
		}
		k = k->next;
	}
	n = malloc(sizeof(hash_node_t));
	if (new_table == NULL)
		return (0);
	n->key = strdup(key);
	if (n->key == NULL)
	{
		free(n);
		return (0);
	}
	n->value = strdup(value);
	if (n->value == NULL)
	{
		free(n->key);
		free(n);
		return (0);
	}
	n->next = NULL;
	if (ht->array[i] != NULL)
		n->next = ht->array[i];
	ht->array[i] = n;

	return (1);
}
